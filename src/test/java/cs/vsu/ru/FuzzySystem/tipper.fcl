FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	service : REAL;
	food : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	tip : REAL;
END_VAR

FUZZIFY service			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM poor := TRIAN 0.0 0.0 4.0;
	TERM good := TRAPE 1.0 4.0 6.0 9.0;
	TERM excellent := TRIAN 6.0 9.0 9.0;
END_FUZZIFY

FUZZIFY food			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM rancid := TRAPE 0.0 0.0 1.0 3.0;
	TERM delicious := TRIAN 6.0 9.0 9.0;
END_FUZZIFY

DEFUZZIFY tip			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM cheap := TRIAN 0.0 5.0 10.0;
	TERM average := TRIAN 10.0 15.0 20.0;
	TERM generous := TRIAN 20.0 25.0 30.0;
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
	RANGE := (0.0 .. 30.0);
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF service IS poor OR food IS rancid THEN tip IS cheap;
	RULE 2 : IF service IS good THEN tip IS average; 
	RULE 3 : IF service IS excellent AND food IS delicious THEN tip IS generous;
END_RULEBLOCK

END_FUNCTION_BLOCK

